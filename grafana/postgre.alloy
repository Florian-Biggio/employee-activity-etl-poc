prometheus.remote_write "metrics_service" {
  endpoint {
    url = "http://localhost:9090/api/v1/write" // Send to local Prometheus
  }
}

loki.write "grafana_cloud_loki" {
  endpoint {
    url = "http://localhost:3100/loki/api/v1/push" // Send to local Loki
  }
}

// 2. POSTGRESQL METRICS COLLECTION
prometheus.exporter.postgres "integrations_postgres_exporter" {
    data_source_names = ["postgresql://postgres:aqwzsxedc@host.docker.internal:5432/postgres?sslmode=disable"]
}

discovery.relabel "integrations_postgres_exporter" {
    targets = prometheus.exporter.postgres.integrations_postgres_exporter.targets
    
    rule {                
        target_label = "job"
        replacement  = "integrations/postgres_exporter"
    }
}

prometheus.relabel "integrations_postgres_exporter" {
	forward_to = [prometheus.remote_write.metrics_service.receiver]

  rule {
        target_label = "instance"
        replacement  = constants.hostname
  }

	rule {
    source_labels = ["__name__"]
    regex         = "pg_settings_max_connections|pg_settings_superuser_reserved_connections|pg_stat_activity_count|pg_stat_activity_max_tx_duration|pg_stat_bgwriter_buffers_alloc_total|pg_stat_bgwriter_buffers_backend_fsync_total|pg_stat_bgwriter_buffers_backend_total|pg_stat_bgwriter_buffers_checkpoint_total|pg_stat_bgwriter_buffers_clean_total|pg_stat_database_blks_hit|pg_stat_database_blks_read|pg_stat_database_conflicts|pg_stat_database_deadlocks|pg_stat_database_numbackends|pg_stat_database_tup_deleted|pg_stat_database_tup_fetched|pg_stat_database_tup_inserted|pg_stat_database_tup_returned|pg_stat_database_tup_updated|pg_stat_database_xact_commit|pg_stat_database_xact_rollback|pg_up|up"
    action        = "keep"
  }
}

prometheus.scrape "integrations_postgres_exporter" {
    targets    = discovery.relabel.integrations_postgres_exporter.output
    forward_to = [prometheus.relabel.integrations_postgres_exporter.receiver]
    job_name   = "integrations/postgres_exporter"
}

// 3. POSTGRESQL LOGS COLLECTION
local.file_match "logs_integrations_postgres_exporter" {
    path_targets = [{
        __address__ = "localhost",
        __path__    = "C:\\Program Files\\PostgreSQL\\*\\data\\pg_log\\*.log",
        instance    = constants.hostname,
        job         = "integrations/postgres_exporter",
    }]
}

loki.source.file "logs_integrations_postgres_exporter" {
    targets    = local.file_match.logs_integrations_postgres_exporter.targets
    forward_to = [loki.write.grafana_cloud_loki.receiver]
}